{"name":"Sharedsqlite","tagline":"A Sqlite class library implementation of the android 'SharedPreferences' object.","body":"### The Y's\r\nSaving persistent data in android can sometime be a lot of trouble, in case it's a data that we can save in RDBMS we're good.<br>\r\nHowever if we are talking about a single row (e.g. saving a token session) we gonna have to use that [SharedPreferences](http://developer.android.com/reference/android/content/SharedPreferences.html) which can sometime take a bit more work than we actually first intend to (committing, use the default file or save it to private file? should I make the file public?)\r\n\r\n### The WAT\r\nIntroducing SharedSqlite! a simple and intuitive way to save your persistent data that do not fit in the table<br>\r\nwithout the hassle of committing, reading etc.\r\n\r\n### The Use\r\nTo create a new instance simply call \r\n\r\n    SharedSqlite.initialize(context);\r\nThen you are free to call \r\n\r\n    SharedSqlite.addValue(key, value);\r\nWherever you want when key and value can be any primitive data type (or enum), to use call - <br>\r\n\r\n    getStringValue(key, defaultValue)\r\n    getIntValue(key, defaultValue)\r\n    getLongValue(key, defaultValue)\r\n    getDoubleValue(key, defaultValue)\r\n    getFloatValue(key, defaultValue)\r\n    getBooleanValue(key, defaultValue)\r\n\r\nTo get the String/int/long/double/float or boolean saved value respectively, in case the key has no mapping your default value will be returned.\r\n\r\n### The Jar\r\nJar file can be downloaded straight from [here](https://github.com/Jhonnyc/SharedSqlite/raw/master/SharedSqlite/SharedSqlite-1.1.jar) just add it to your project 'libs' folder and your'e good to go.","google":"UA-64565166-1","note":"Don't delete this file! It's used internally to help with page regeneration."}